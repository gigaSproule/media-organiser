apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'idea'
apply plugin: 'eclipse'

repositories {
    mavenLocal()
    mavenCentral()
}

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

eclipse {
    classpath {
        downloadSources = true
        downloadJavadoc = true
    }
}

sourceCompatibility = JavaVersion.VERSION_21
targetCompatibility = JavaVersion.VERSION_21

group = 'com.benjaminsproule'
version = '1.0-SNAPSHOT'

description = """"""

mainClassName = "com.benjaminsproule.mediaorganiser.Main"

dependencies {
    implementation 'commons-cli:commons-cli:1.6.0'
    implementation 'org.apache.commons:commons-lang3:3.14.0'
    implementation 'com.drewnoakes:metadata-extractor:2.19.0'
    implementation 'org.overviewproject:mime-types:2.0.0'
    implementation 'org.apache.logging.log4j:log4j-api:2.22.1'
    implementation 'org.apache.logging.log4j:log4j-core:2.22.1'
    implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.23.0'
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'

    testCompileOnly 'org.projectlombok:lombok:1.18.30'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.30'
    testImplementation 'org.hamcrest:hamcrest-all:1.3'
    testImplementation('org.mockito:mockito-core:5.10.0') {
        exclude group: 'org.hamcrest'
    }
    testImplementation 'com.jayway.awaitility:awaitility:1.7.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.10.2'
    testImplementation('org.junit.platform:junit-platform-launcher:1.10.2')
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.2'
}

test {
    useJUnitPlatform()
}

jar {
    manifest {
        attributes "Main-Class": "com.benjaminsproule.mediaorganiser.Main"
    }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}
